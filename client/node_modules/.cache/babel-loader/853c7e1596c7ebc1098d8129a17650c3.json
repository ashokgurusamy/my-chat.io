{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\my-chat.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\my-chat.io\\\\client\\\\src\\\\components\\\\chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport TextContainer from \"../TextContainer/TextContainer\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Footer from \"../footer/footer\";\nimport Input from \"../Input/Input\";\nimport \"./chat.css\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1]; //const ENDPOINT = \"https://project-mychat.herokuapp.com/\";\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n\n  const ENDPOINT = \"https://project-chat-application.herokuapp.com/\";\n\n  var aesjs = require(\"aes-js\");\n\n  var key = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]; // The initialization vector (must be 16 bytes)\n\n  var iv = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\n  var encryptedHex;\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [messages]); // const encryptMsg = event => {\n  //   event.preventDefault();\n  //   alert();\n  //   if (message) {\n  //     var text = \"hi\";\n  //     var textBytes = aesjs.utils.utf8.toBytes(text);\n  //     var aesCbc = new aesjs.ModeOfOperation.cbc(key, iv);\n  //     var encryptedBytes = aesCbc.encrypt(textBytes);\n  //     // To print or store the binary data, you may convert it to hex\n  //     encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  //     console.log(message, room, name, messages.length);\n  //     socket.emit(\"encryptMsg\", message, () => setMessage(\"\"));\n  //     console.log(encryptedHex);\n  //   }\n  // };\n\n  function encryptMsg() {\n    var text = \"hi\";\n    var textBytes = aesjs.utils.utf8.toBytes(text);\n    var aesCbc = new aesjs.ModeOfOperation.cbc(key, iv);\n    var encryptedBytes = aesCbc.encrypt(textBytes); // To print or store the binary data, you may convert it to hex\n\n    encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n    console.log(message, room, name, messages.length);\n  }\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      console.log(\"Comes from chat.js: \", message, room, name, messages.length);\n      socket.emit(\"encryptMsg\", message, () => setMessage(\"\"));\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    encryptMsg: encryptMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\my-chat.io\\client\\src\\components\\chat\\Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Footer","Input","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","aesjs","require","key","iv","encryptedHex","parse","search","emit","error","alert","on","off","encryptMsg","text","textBytes","utils","utf8","toBytes","aesCbc","ModeOfOperation","cbc","encryptedBytes","encrypt","hex","fromBytes","console","log","length","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport TextContainer from \"../TextContainer/TextContainer\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport InfoBar from \"../InfoBar/InfoBar\";\r\nimport Footer from \"../footer/footer\";\r\nimport Input from \"../Input/Input\";\r\n\r\nimport \"./chat.css\";\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  //const ENDPOINT = \"https://project-mychat.herokuapp.com/\";\r\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  const ENDPOINT = \"https://project-chat-application.herokuapp.com/\";\r\n  var aesjs = require(\"aes-js\");\r\n  var key = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\r\n\r\n  // The initialization vector (must be 16 bytes)\r\n  var iv = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36];\r\n  var encryptedHex;\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket.emit(\"join\", { name, room }, error => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", message => {\r\n      setMessages([...messages, message]);\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"disconnect\");\r\n\r\n      socket.off();\r\n    };\r\n  }, [messages]);\r\n\r\n  // const encryptMsg = event => {\r\n  //   event.preventDefault();\r\n  //   alert();\r\n  //   if (message) {\r\n  //     var text = \"hi\";\r\n  //     var textBytes = aesjs.utils.utf8.toBytes(text);\r\n\r\n  //     var aesCbc = new aesjs.ModeOfOperation.cbc(key, iv);\r\n  //     var encryptedBytes = aesCbc.encrypt(textBytes);\r\n\r\n  //     // To print or store the binary data, you may convert it to hex\r\n\r\n  //     encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\r\n  //     console.log(message, room, name, messages.length);\r\n  //     socket.emit(\"encryptMsg\", message, () => setMessage(\"\"));\r\n\r\n  //     console.log(encryptedHex);\r\n  //   }\r\n  // };\r\n  function encryptMsg() {\r\n    var text = \"hi\";\r\n    var textBytes = aesjs.utils.utf8.toBytes(text);\r\n\r\n    var aesCbc = new aesjs.ModeOfOperation.cbc(key, iv);\r\n    var encryptedBytes = aesCbc.encrypt(textBytes);\r\n\r\n    // To print or store the binary data, you may convert it to hex\r\n\r\n    encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\r\n    console.log(message, room, name, messages.length);\r\n  }\r\n\r\n  const sendMessage = event => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      console.log(\"Comes from chat.js: \", message, room, name, messages.length);\r\n      socket.emit(\"encryptMsg\", message, () => setMessage(\"\"));\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Parent\">\r\n      <div className=\"outerContainer\">\r\n        <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input\r\n            message={message}\r\n            setMessage={setMessage}\r\n            sendMessage={sendMessage}\r\n            encryptMsg={encryptMsg}\r\n          />\r\n        </div>\r\n        <TextContainer users={users} />\r\n      </div>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}